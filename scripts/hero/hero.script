local OM = require "scripts.logic.gobject"
local position = require "scripts.lib.position"

function init(self)
    self.hp = 100
    self.speed = 85
    self.damage = 15
    OM.create_gobject(self)
    msg.post(".", M.ACQUIRE_INPUT_FOCUS)
    self.direction = vmath.vector3(0, 0, 0)
    self.prev_direction = vmath.vector3(0, -1, 0)
    self.current_animation = nil
    self.correction = vmath.vector3()
    self.locked_anim = false
    self.interaction = {}
    self.zoomed_in = false
end

function final()
    msg.post(".", "release_input_focus")
    OM.delete_gobject()
end

local function finalize_update(self)
    self.is_attacking = false
    self.is_moving = false
    self.direction.x = 0
    self.direction.y = 0
    self.correction.x = 0
    self.correction.y = 0
end

function update(self, dt)
    if self.is_moving then
        local p = go.get_position()
        position.set_iso_position(p + vmath.normalize(self.direction) * self.speed * dt, C.OBECTS_Z_INDEX)
        self.prev_direction = self.direction
    end
    finalize_update(self)
end

function on_input(self, action_id, action)
    if action.pressed then
        -- actions only if pressed
        if action_id == hash("zoom") then
            if self.zoomed_in then
                self.zoomed_in = false
                go.set("camera#camera", "orthographic_zoom", 1.0)
            else
                self.zoomed_in = true
                go.set("camera#camera", "orthographic_zoom", 2.0)
            end
        end
        -- movement
    elseif action_id == C.LEFT then
        self.is_moving = true
        self.direction.x = -1
    elseif action_id == C.RIGHT then
        self.is_moving = true
        self.direction.x = 1
    elseif action_id == C.UP then
        self.is_moving = true
        self.direction.y = 1
    elseif action_id == C.DOWN then
        self.is_moving = true
        self.direction.y = -1
    end
end
